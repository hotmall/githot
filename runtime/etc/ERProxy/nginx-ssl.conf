#user  nobody;
worker_processes  4;

#error_log  var/log/error.log  info;
#pid        var/log/nginx.pid;


events {
    worker_connections  256;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  var/log/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    client_max_body_size 512M;

    # 开启gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml text/xml image/jpeg image/gif image/png;
    gzip_disable "MSIE [1-6]\.";

    # Load the certificate files.
    ssl_certificate         /etc/nginx/ssl/githot.cc/fullchain.cer;
    ssl_certificate_key     /etc/nginx/ssl/githot.cc/githot.cc.key;
    ssl_trusted_certificate /etc/nginx/ssl/githot.cc/ca.cer;

    # Define the ciphers to use in the preferred order.
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:DHE+AESGCM:DHE:!RSA!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!CAMELLIA:!SEED";

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
  
    server {
        # Listen to port 443 on both IPv4 and IPv6.
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # Domain names this server should respond to.
        server_name githot.cc www.githot.cc;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://localhost:3000;
            proxy_set_header Connection $http_connection;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name  githot.cc www.githot.cc;
        return 301 https://$server_name$request_uri;
    }
}
